/******************************************************************************

                  版权所有 (C), 2018-2030, For Everyone 

 ******************************************************************************
  文 件 名   : multiClient.h
  版 本 号   : 初稿
  作    者   : HansenLiu
  生成日期   : 2021年9月21日
  最近修改   :
  功能描述   : 多文件客户端的头文件
  函数列表   :
  修改历史   :
  1.日    期   : 2021年9月21日
    作    者   : HansenLiu
    修改内容   : 创建文件

******************************************************************************/


#ifndef __MULTICLIENT__

#define  __MULTICLIENT__

/*----------------------------------------------*
 * 包含头文件                                   *
 *----------------------------------------------*/

#include"common.h"


/*----------------------------------------------*
 * 宏定义                                       *
 *----------------------------------------------*/
#define 	SOCKET_ERROR 	-1     // socket出错了
#define 	SOCKET_TRUE  	1      // 成功
#define 	SOCKET_FALSE 	0      // 失败

#define    	MAXCLIENT		3		//最多客户端数量

#define		PTHREAD		1	//是否使用多线程，1-一个客户端开一个线程,2-poll

/*----------------------------------------------*
 * 常量定义                                     *
 *----------------------------------------------*/


//结构体定义，外部需要使用这个结构体进行创立客户端
typedef  struct 
{
    void  (*Recv)(uint8_t *buf ,  uint8_t len);	//接收回调函数，将接收到的信息回调到本地
    int  fd;
    const char * url;  // 服务器ip地址
    int32_t port;      //服务器端口
    char   alive;      //SOCKET是否存活
    uint8_t idx;       //客户端的编号,可以通过这个编号索引到这个客户端的其他信息
} TcpClient;




/*----------------------------------------------*
 * 外部变量说明                                 *
 *----------------------------------------------*/

/*----------------------------------------------*
 * 外部函数原型说明                             *
 *----------------------------------------------*/


void tcp_client_init();
int  tcp_client_create(TcpClient client);

void tcp_client_Send(uint8_t idx,uint8_t *buf ,  uint8_t len);


void init_sigaction();




#endif /* __MULTICLIENT__ */


